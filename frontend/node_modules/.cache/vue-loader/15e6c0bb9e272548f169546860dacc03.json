{"remainingRequest":"/home/kien/Documents/blockchain-research/tezos-certificate/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kien/Documents/blockchain-research/tezos-certificate/frontend/src/components/details/Authentication.vue?vue&type=style&index=0&id=cc08fcd6&lang=scss&scoped=true&","dependencies":[{"path":"/home/kien/Documents/blockchain-research/tezos-certificate/frontend/src/components/details/Authentication.vue","mtime":1600524214197},{"path":"/home/kien/Documents/blockchain-research/tezos-certificate/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kien/Documents/blockchain-research/tezos-certificate/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/kien/Documents/blockchain-research/tezos-certificate/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/kien/Documents/blockchain-research/tezos-certificate/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kien/Documents/blockchain-research/tezos-certificate/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kien/Documents/blockchain-research/tezos-certificate/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMSB7CiAgY29sb3I6ICMwMDAwMDA7CiAgbWFyZ2luLXRvcDogMTAlOwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KLmF1dGhlbi1mb3JtIGlucHV0IHsKICBmb250LXNpemU6IDE1cHg7CiAgY29sb3I6ICMwMzE1MzI7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIHBhZGRpbmc6IDE1cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjRmNTsKICBib3JkZXI6IHNvbGlkIDFweCByZ2JhKDMsMjEsNTAsMC4xMyk7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICB3aWR0aDogNTAlOwp9Ci5hdXRoZW4tZm9ybSBidXR0b24gewogIGJhY2tncm91bmQ6ICMwMDAwMDA7CiAgd2lkdGg6IDEwJTsKICBib3JkZXI6IDA7CiAgcGFkZGluZzogMTVweDsKICBjb2xvcjogI0ZGRkZGRjsKICBmb250LXNpemU6IDE3cHg7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["Authentication.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Authentication.vue","sourceRoot":"src/components/details","sourcesContent":["<template>\n  <div>\n    <home :activeAuthen=\"true\"/>\n    <div class=\"authenticate\">\n      <form class=\"authen-form\">\n        <h1>{{ \"Authentication\" }}</h1>\n        <input type=\"text\" v-model=\"credential_number\" placeholder=\"Credential Number\"/>\n        <button type=\"button\" @click=\"submit()\" :disable=\"getDisabled\">{{ \"Verify\" }}</button>\n      </form>\n    </div>\n    <authentication-modal v-if=\"authenModal\" \n    :credentialNumber=\"credential_number\" \n    :certificate=\"certificate\"\n    @change-modal=\"change\"\n    @close-modal=\"close\"/>\n    <authen-signature-modal v-if=\"authenSign\" \n    :signature=\"signature\" \n    :email=\"email\"\n    @close-sign-modal=\"closeSign\"/>\n  </div>\n</template>\n\n<script>\n  import Home from '@/components/roots/Home.vue' \n  import AuthenticationModal from '@/components/modals/AuthenticationModal.vue'\n  import AuthenSignatureModal from '@/components/modals/AuthenSignatureModal.vue'\n  import ServerRequest from '@/requests/ServerRequest'\n\n  export default {\n    data() {\n      return {\n        credential_number: null,\n        getDisabled: false,\n        authenModal: false,\n        authenSign: false,\n        signature: null,\n        email: null,\n        certificate: null\n      }\n    },\n    components: {\n      Home,\n      AuthenticationModal,\n      AuthenSignatureModal\n    },\n    methods: {\n      async submit() {\n        const certificate = await ServerRequest.getCertificateByCredential({ credential_number: this.credential_number }) \n        if(!certificate.length) {\n          window.EventBus.$emit('ERROR', 'Invalid Credential Number')\n        }\n        else if(!certificate[0].is_broadcasted) {\n          window.EventBus.$emit('ERROR', 'Invalid Credential Number')\n        }\n        else {\n          this.authenModal = true\n          this.certificate = certificate\n        }\n      },\n      change(signature, email) {\n        this.signature = signature\n        this.email = email\n        this.authenModal = false\n        this.authenSign = true\n      },\n      close() {\n        this.authenModal = false\n      },\n      closeSign() {\n        this.authenSign = false\n      }\n    },\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n  h1 {\n    color: #000000;\n    margin-top: 10%;\n    margin-bottom: 20px;\n  }\n  .authen-form input {\n    font-size: 15px;\n    color: #031532;\n    border-radius: 3px;\n    padding: 15px;\n    background-color: #f3f4f5;\n    border: solid 1px rgba(3,21,50,0.13);\n    box-sizing: border-box;\n    width: 50%;\n  }\n  .authen-form button {\n    background: #000000;\n    width: 10%;\n    border: 0;\n    padding: 15px;\n    color: #FFFFFF;\n    font-size: 17px;\n    border-radius: 3px;\n    position: relative;\n    cursor: pointer;\n  }\n</style>"]}]}